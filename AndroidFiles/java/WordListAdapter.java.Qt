myfile << "\n\n";
myfile << "/*";
 myfile << "* Copyright (C) 2017 Google Inc.";
 myfile << "*";
 myfile << "* Licensed under the Apache License, Version 2.0 (the \"License\");";
 myfile << "* you may not use this file except in compliance with the License.";
 myfile << "* You may obtain a copy of the License at";
 myfile << "*";
 myfile << "*      http://www.apache.org/licenses/LICENSE-2.0";
 myfile << "*";
 myfile << "* Unless required by applicable law or agreed to in writing, software";
 myfile << "* distributed under the License is distributed on an \"AS IS\" BASIS,";
 myfile << "* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.";
 myfile << "* See the License for the specific language governing permissions and";
 myfile << "* limitations under the License.";
 myfile << "*/";
myfile << "\n";
myfile << "import android.view.ViewGroup;";
myfile << "";
myfile << "import androidx.annotation.NonNull;";
myfile << "import androidx.recyclerview.widget.DiffUtil;";
myfile << "import androidx.recyclerview.widget.ListAdapter;";
myfile << "";
myfile << "";
myfile << "public class WordListAdapter extends ListAdapter<Word, WordViewHolder> {";
myfile << "";
    myfile << "public WordListAdapter(@NonNull DiffUtil.ItemCallback<Word> diffCallback) {";
        myfile << "super(diffCallback);";
    myfile << "}";
myfile << "";
    myfile << "@Override";
    myfile << "public WordViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {";
        myfile << "return WordViewHolder.create(parent);";
    myfile << "}";
myfile << "";
    myfile << "@Override";
    myfile << "public void onBindViewHolder(WordViewHolder holder, int position) {";
        myfile << "Word current = getItem(position);";
        myfile << "holder.bind(current.getWord());";
    myfile << "}";
myfile << "";
    myfile << "static class WordDiff extends DiffUtil.ItemCallback<Word> {";
myfile << "";
        myfile << "@Override";
        myfile << "public boolean areItemsTheSame(@NonNull Word oldItem, @NonNull Word newItem) {";
            myfile << "return oldItem == newItem;";
        myfile << "}";
myfile << "";
        myfile << "@Override";
        myfile << "public boolean areContentsTheSame(@NonNull Word oldItem, @NonNull Word newItem) {";
            myfile << "return oldItem.getWord().equals(newItem.getWord());";
        myfile << "}";
    myfile << "}";
myfile << "}";
